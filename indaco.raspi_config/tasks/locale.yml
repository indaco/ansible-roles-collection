---

- name: Ensure localisation files for '{{ system_locale }}' are available
  become: yes
  locale_gen:
    name: "{{ system_locale }}"
    state: present
  tags:
    - system_config

- name: Ensure localisation files for '{{ system_language }}' are available
  become: yes
  locale_gen:
    name: "{{ system_language }}"
    state: present
  tags:
    - system_config

- name: Get current locale and language configuration
  become: yes
  command: localectl status
  register: locale_status
  changed_when: false
  tags:
    - system_config

- name: Parse 'LANG' from current locale and language configuration
  become: yes
  set_fact:
    locale_lang: "{{ locale_status.stdout | regex_search('LANG=([^\n]+)', '\\1') | first }}"
  tags:
    - system_config

- name: Parse 'LANGUAGE' from current locale and language configuration
  become: yes
  set_fact:
    locale_language: "{{ locale_status.stdout | regex_search('LANGUAGE=([^\n]+)', '\\1') | default([locale_lang], true) | first }}"
  tags:
    - system_config

- name: Configure locale to '{{ system_locale }}' and language to '{{ system_language }}'
  become: yes
  shell: localectl set-locale LANG={{ system_locale }} LANGUAGE={{ system_language }}
  when: locale_lang != system_locale or locale_language != system_language
  tags:
    - system_config

- name: Set Timezone to '{{ system_timezone }}'
  become: yes
  shell: timedatectl set-timezone {{ system_timezone }}
  tags:
    - system_config

- name: Reboot host and wait for it to restart
  become: yes
  reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5
    reboot_timeout: 600
    pre_reboot_delay: 0
    post_reboot_delay: 30
